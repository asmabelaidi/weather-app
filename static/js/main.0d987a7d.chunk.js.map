{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setquery","weather","setweather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","month","getMonth","date","getDate","year","getFullYear","dateBuilder","Date","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAEMA,G,MACA,oCADAA,EAEC,2CAyDQC,MAvDf,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAERC,EAFQ,KAEDC,EAFC,OAGeF,mBAAS,IAHxB,mBAGRG,EAHQ,KAGCC,EAHD,KA2Bb,OACE,sBAAKC,UACkB,oBAAfF,EAAQG,MACdH,EAAQG,KAAKC,KAAO,GAAI,WACvB,MAHH,UAII,qBAAKF,UAAU,aAAf,SACC,uBAAOG,KAAK,OAAOC,YAAY,YAC/BC,SAAU,SAACC,GAAD,OAAKT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WApBO,SAAAC,GACA,UAAVA,EAAIC,KACLC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDoB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACLjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WAgBe,oBAAhBlB,EAAQG,KACjB,qCACE,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,IAA0CrB,EAAQsB,IAAIC,WACtD,qBAAKrB,UAAU,OAAf,SAtCO,SAACsB,GACd,IAGIC,EAFK,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE9DD,EAAEE,UACZC,EAJO,CAAC,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,YAAY,UAAU,WAAW,YAI7FH,EAAEI,YAChBC,EAAKL,EAAEM,UACPC,EAAMP,EAAEQ,cAChB,MAAM,GAAN,OAAUP,EAAV,YAAiBI,EAAjB,YAAyBF,EAAzB,YAAkCI,GA8BDE,CAAY,IAAIC,WAEzC,sBAAKhC,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBiC,KAAKC,MAAMpC,EAAQG,KAAKC,MAA/C,WACA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAG/C,OC5CKkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0d987a7d.chunk.js","sourcesContent":["import './App.css';\nimport React,{useState} from 'react';\nconst api={\n  key:\"68de0485b291a7d1ec512dc70e964fc8\",\n  base:\"https://api.openweathermap.org/data/2.5/\",\n}\nfunction App() {\n\nconst [query, setquery] = useState('');\nconst [weather, setweather] = useState({})\n\nconst dateBuilder= (d)=>{\n      let months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\n      let days=[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n\n      let day =days[d.getDay()];\n      let month= months[d.getMonth()];\n      let date=d.getDate();\n      let year =d.getFullYear();\n  return `${day} ${date} ${month} ${year}`\n}\n//api.openweathermap.org/data/2.5/weather?id=524901&appid=YOUR_API_KEY\n const search = evt=>{\n   if(evt.key===\"Enter\"){\n     fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n     .then(res=>res.json())\n     .then(result=>{\n      setweather(result);\n      setquery('');\n      console.log(result)\n      })\n   }\n  }\n  return (\n    <div className={\n    (typeof weather.main!= \"undefined\")?\n    ((weather.main.temp > 16)?'app warm':'app')\n      :'app'}>\n        <div className=\"search-bar\">\n         <input type=\"text\" placeholder=\"Search...\" \n         onChange={(e)=>setquery(e.target.value)}\n         value={query}\n         onKeyPress={search}\n         />\n        </div>\n        {(typeof weather.main != \"undefined\")?(\n        <>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name} {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">{Math.round(weather.main.temp)}Â°c</div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n          </div>\n        </>)\n        :('')}\n     </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}